{"version":3,"sources":["helpers/api.js","User.js","redux/store.js","Pagination.js","Table.js","App.js","index.js"],"names":["getUsers","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","response","data","wrap","_context","prev","next","fetch","proxyUrl","sent","json","abrupt","users","stop","apply","this","arguments","User","user","react_default","createElement","id","name","surname","desc","store","createStore","state","action","type","objectSpread","value","target","currentPage","subscribe","console","log","getState","connect","dispatch","changePage","event","className","onClick","e","_ref$users","filter","index","map","src_User","key","App","setUsers","props","count","src_Table","src_Pagination","React","Component","length","ReactDOM","render","es","src_App_0","document","getElementById"],"mappings":"gSAIaA,SAAQ,eAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAG,SAAAC,IAAA,IAAAC,EAAAC,EAAA,OAAAL,EAAAC,EAAAK,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACGC,MAAMC,8EADT,cACdP,EADcG,EAAAK,KAAAL,EAAAE,KAAA,EAEDL,EAASS,OAFR,cAEdR,EAFcE,EAAAK,KAAAL,EAAAO,OAAA,SAGbT,EAAKU,OAHQ,wBAAAR,EAAAS,SAAAb,MAAH,yBAAAN,EAAAoB,MAAAC,KAAAC,YAAA,ICONC,EATF,SAAAvB,GAAA,IAAGwB,EAAHxB,EAAGwB,KAAH,OACTC,EAAArB,EAAAsB,cAAA,UACID,EAAArB,EAAAsB,cAAA,UAAKF,EAAKG,IACVF,EAAArB,EAAAsB,cAAA,UAAKF,EAAKI,MACVH,EAAArB,EAAAsB,cAAA,UAAKF,EAAKK,SACVJ,EAAArB,EAAAsB,cAAA,UAAKF,EAAKM,sBCuCZC,EAAQC,YArCE,SAACC,EAAOC,GACpB,OAAQA,EAAOC,MACX,IAViB,YAWb,OAAOlC,OAAAmC,EAAA,EAAAnC,CAAA,GACAgC,EADP,CAEIf,MAAOgB,EAAOhB,QAEtB,IAdmB,cAef,IAAImB,EAAQH,EAAOG,MACnB,MAAuB,YAAlBH,EAAOI,OACDL,EAEG,SAAVI,EACIJ,EAAMM,YAAc,EACbtC,OAAAmC,EAAA,EAAAnC,CAAA,GACAgC,EADP,CAEIM,YAAaN,EAAMM,YAAc,IAE3BN,EAEJ,SAAVI,EACIJ,EAAMM,YAAc,EACbtC,OAAAmC,EAAA,EAAAnC,CAAA,GACAgC,EADP,CAEIM,YAAaN,EAAMM,YAAc,IAE3BN,EAEXhC,OAAAmC,EAAA,EAAAnC,CAAA,GACAgC,EADP,CAEIM,aAAcF,IAEtB,QACI,OAAOJ,IAtCE,CACjBf,MAAO,GACPqB,YAAa,IA0CjBR,EAAMS,UAAU,WACZC,QAAQC,IAAIX,EAAMY,cAGPZ,QC/BAa,cAAQ,KAJH,SAACC,GAAD,MAAe,CAC/BC,WAAY,SAACC,GAAD,OAAWF,EAAS,CAAEV,KDhBX,cCgB8BG,OAAQS,EAAMT,OAAQD,MAAOU,EAAMT,OAAOD,WAGpFO,CAfI,SAAA5C,GAAA,IAAG8C,EAAH9C,EAAG8C,WAAH,OACfrB,EAAArB,EAAAsB,cAAA,OAAKsB,UAAU,aAAaC,QAAS,SAACC,GAAD,OAAOJ,EAAWI,KACnDzB,EAAArB,EAAAsB,cAAA,UAAQS,KAAK,SAASP,KAAK,OAAOS,MAAM,QAAQ,KAChDZ,EAAArB,EAAAsB,cAAA,UAAQS,KAAK,SAASP,KAAK,IAAIS,MAAM,KAArC,KACAZ,EAAArB,EAAAsB,cAAA,UAAQS,KAAK,SAASP,KAAK,IAAIS,MAAM,KAArC,KACAZ,EAAArB,EAAAsB,cAAA,UAAQS,KAAK,SAASP,KAAK,IAAIS,MAAM,KAArC,KACAZ,EAAArB,EAAAsB,cAAA,UAAQS,KAAK,SAASP,KAAK,IAAIS,MAAM,KAArC,KACAZ,EAAArB,EAAAsB,cAAA,UAAQS,KAAK,SAASP,KAAK,OAAOS,MAAM,QAAxC,QCqBOO,cAPE,SAACX,GACd,MAAO,CACHf,MAAOe,EAAMf,MACbqB,YAAaN,EAAMM,cAIZK,CA7BD,SAAA5C,GAAA,IAAAmD,EAAAnD,EAAGkB,aAAH,IAAAiC,EAAW,GAAXA,EAAeZ,EAAfvC,EAAeuC,YAAf,OACVd,EAAArB,EAAAsB,cAAA,SAAOsB,UAAU,eACbvB,EAAArB,EAAAsB,cAAA,aACID,EAAArB,EAAAsB,cAAA,UACID,EAAArB,EAAAsB,cAAA,oBACAD,EAAArB,EAAAsB,cAAA,kBACAD,EAAArB,EAAAsB,cAAA,qBACAD,EAAArB,EAAAsB,cAAA,2BAGRD,EAAArB,EAAAsB,cAAA,aACKR,EAAMkC,OAAO,SAAC5B,EAAM6B,GAAP,OAAmBA,GDZtB,ECY+Bd,EDZ/B,GCYoEc,EDZpE,ECY4Ed,IAClFe,IAAI,SAAA9B,GAAI,OACLC,EAAArB,EAAAsB,cAAC6B,EAAD,CACIC,IAAKhC,EAAKG,GACVH,KAAMA,UCZxBiC,qTAEMC,EAAarC,KAAKsC,MAAlBD,kBACY3D,WAAdmB,SACNwC,EAASxC,sIAIT,OACEO,EAAArB,EAAAsB,cAAA,OAAKsB,UAAU,OACbvB,EAAArB,EAAAsB,cAAA,sBAAaD,EAAArB,EAAAsB,cAAA,YAAOL,KAAKsC,MAAMC,OAA/B,UACAnC,EAAArB,EAAAsB,cAACmC,EAAD,MACApC,EAAArB,EAAAsB,cAACoC,EAAD,cAZUC,IAAMC,WA2BTpB,cAVE,SAACX,GAChB,MAAO,CACL2B,MAAO3B,EAAMf,MAAM+C,SAIH,SAACpB,GAAD,MAAe,CACjCa,SAAU,SAACxC,GAAD,OAAW2B,EAAS,CAAEV,KH/BT,YG+B0BjB,MAAOA,OAG3C0B,CAA+Ba,GC5B9CS,IAASC,OACL1C,EAAArB,EAAAsB,cAAC0C,EAAA,EAAD,CAAUrC,MAAOA,GACbN,EAAArB,EAAAsB,cAAC2C,EAAD,OAEJC,SAASC,eAAe","file":"static/js/main.3ce5ef81.chunk.js","sourcesContent":["const BASE_URL = 'http://dev.frevend.com/json/users.json';\n/// for allowed access from CORS\nconst proxyUrl = 'https://cors-anywhere.herokuapp.com/';\n\nexport const getUsers = async () => {\n    const response = await fetch(proxyUrl + BASE_URL);\n    const data = await response.json();\n    return data.users;\n};","import React from 'react';\n\nconst User = ({ user }) => (\n    <tr>\n        <td>{user.id}</td>\n        <td>{user.name}</td>\n        <td>{user.surname}</td>\n        <td>{user.desc}</td>\n    </tr>\n);\n\nexport default User;\n","import { createStore } from 'redux';\nexport const SET_USERS = \"SET_USERS\";\nexport const CHANGE_PAGE = \"CHANGE_PAGE\";\n\nconst initialState = {\n    users: [],\n    currentPage: 1,\n}\n\nconst reducer = (state, action) => {\n    switch (action.type) {\n        case SET_USERS:\n            return {\n                ...state,\n                users: action.users,\n            }\n        case CHANGE_PAGE:\n            let value = action.value;\n            if (!action.target === \"button\") {\n                return state\n            }\n            if (value === \"next\") {\n                if (state.currentPage < 4) {\n                    return {\n                        ...state,\n                        currentPage: state.currentPage + 1\n                    }\n                } else return state;\n            }\n            if (value === \"prev\") {\n                if (state.currentPage > 1) {\n                    return {\n                        ...state,\n                        currentPage: state.currentPage - 1\n                    }\n                } else return state;\n            }\n            return {\n                ...state,\n                currentPage: +value\n            }\n        default:\n            return state;\n    }\n};\n\nconst store = createStore(reducer, initialState);\n\nstore.subscribe(() => {\n    console.log(store.getState());\n})\n\nexport default store;\n\nexport const usersCount = (state) => {\n    return state.users.length;\n};\n\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { CHANGE_PAGE } from './redux/store'\n\nexport const perPage = 5;\n\nconst Pagination = ({ changePage }) => (\n    <div className=\"pagination\" onClick={(e) => changePage(e)}>\n        <button type=\"button\" name=\"prev\" value=\"prev\">{\"<\"}</button>\n        <button type=\"button\" name=\"1\" value=\"1\">1</button>\n        <button type=\"button\" name=\"2\" value=\"2\">2</button>\n        <button type=\"button\" name=\"3\" value=\"3\">3</button>\n        <button type=\"button\" name=\"4\" value=\"4\">4</button>\n        <button type=\"button\" name=\"next\" value=\"next\">></button>\n    </div>\n)\n\nconst mapDispatch = (dispatch) => ({\n    changePage: (event) => dispatch({ type: CHANGE_PAGE, target: event.target, value: event.target.value }),\n});\n\nexport default connect(null, mapDispatch)(Pagination);","import React from 'react';\nimport { connect } from 'react-redux';\nimport User from './User'\nimport { perPage } from './Pagination'\n\nconst Table = ({ users = [], currentPage }) => (\n    <table className=\"table-users\">\n        <thead>\n            <tr>\n                <th>Number</th>\n                <th>name</th>\n                <th>surname</th>\n                <th>description</th>\n            </tr>\n        </thead>\n        <tbody>\n            {users.filter((user, index) => ((index >= currentPage * perPage - perPage) && (index < currentPage * perPage)))\n                .map(user => (\n                    <User\n                        key={user.id}\n                        user={user}\n                    />\n                ))}\n        </tbody>\n    </table>\n);\n\nconst mapState = (state) => {\n    return {\n        users: state.users,\n        currentPage: state.currentPage\n    };\n};\n\nexport default connect(mapState)(Table);","import React from 'react';\nimport './App.css';\nimport { getUsers } from './helpers/api';\nimport { connect } from 'react-redux';\nimport Table from './Table';\nimport Pagination from './Pagination';\nimport { SET_USERS } from './redux/store'\n\nclass App extends React.Component {\n  async componentDidMount() {\n    const { setUsers } = this.props;\n    const users = await getUsers();\n    setUsers(users);\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>Table of <span>{this.props.count}</span> users</h1>\n        <Table />\n        <Pagination />\n      </div>);\n  }\n}\n\nconst mapState = (state) => {\n  return {\n    count: state.users.length,\n  };\n};\n\nconst mapDispatch = (dispatch) => ({\n  setUsers: (users) => dispatch({ type: SET_USERS, users: users }),\n});\n\nexport default connect(mapState, mapDispatch)(App);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport store from './redux/store';\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n);"],"sourceRoot":""}
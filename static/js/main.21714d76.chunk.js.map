{"version":3,"sources":["helpers/api.js","User.js","redux/store.js","Pagination.js","Table.js","App.js","index.js"],"names":["getUsers","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","response","data","wrap","_context","prev","next","fetch","proxyUrl","sent","json","abrupt","users","stop","apply","this","arguments","User","user","react_default","createElement","id","name","surname","desc","store","createStore","state","action","type","objectSpread","value","currentPage","perPage","Pagination","_this$props","props","changePage","pageNumbers","i","Math","ceil","length","push","className","onClick","map","number","key","React","Component","connect","dispatch","_ref$users","filter","index","src_User","App","setUsers","count","src_Table","src_Pagination","ReactDOM","render","es","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.21714d76.chunk.js","sourcesContent":["const BASE_URL = 'http://dev.frevend.com/json/users.json';\n/// for allowed access from CORS\nconst proxyUrl = 'https://cors-anywhere.herokuapp.com/';\n\nexport const getUsers = async () => {\n    const response = await fetch(proxyUrl + BASE_URL);\n    const data = await response.json();\n    return data.users;\n};","import React from 'react';\n\nconst User = ({ user }) => (\n    <tr>\n        <td>{user.id}</td>\n        <td>{user.name}</td>\n        <td>{user.surname}</td>\n        <td>{user.desc}</td>\n    </tr>\n);\n\nexport default User;\n","import { createStore } from 'redux';\nimport { perPage } from '../Pagination';\nexport const SET_USERS = \"SET_USERS\";\nexport const CHANGE_PAGE = \"CHANGE_PAGE\";\n\nconst initialState = {\n    users: [],\n    currentPage: 1,\n}\n\nconst reducer = (state, action) => {\n    switch (action.type) {\n        case SET_USERS:\n            return {\n                ...state,\n                users: action.users,\n            }\n        case CHANGE_PAGE:\n            let value = action.currentPage;\n            if (value === \"next\") {\n                if (state.currentPage < perPage - 1) {\n                    return {\n                        ...state,\n                        currentPage: state.currentPage + 1\n                    }\n                } else return state;\n            }\n            if (value === \"prev\") {\n                if (state.currentPage > 1) {\n                    return {\n                        ...state,\n                        currentPage: state.currentPage - 1\n                    }\n                } else return state;\n            }\n            return {\n                ...state,\n                currentPage: +value\n            }\n        default:\n            return state;\n    }\n};\n\nconst store = createStore(reducer, initialState);\n\nexport default store;\n\nexport const usersCount = (state) => {\n    return state.users.length;\n};\n\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { CHANGE_PAGE } from './redux/store'\n\nexport const perPage = 5;\n\nclass Pagination extends React.Component {\n    render() {\n        const { changePage, users, currentPage } = this.props;\n        const pageNumbers = [];\n\n        for (let i = 1; i <= Math.ceil(users.length / perPage); i++) {\n            pageNumbers.push(i);\n        }\n\n        return (\n            <div className=\"pagination\">\n                <button type=\"button\" name=\"prev\" value=\"prev\" onClick={() => changePage(\"prev\")} className=\"pagination__btn\"> {\"<\"}</button>\n                {pageNumbers.map(number =>\n                    <button key={number}\n                        onClick={() => changePage(number)}\n                        className={number === currentPage ? \"pagination__btn focused\" : \"pagination__btn\"} >\n                        {number}\n                    </button>\n                )}\n                <button type=\"button\" name=\"next\" value=\"next\" onClick={() => changePage(\"next\")} className=\"pagination__btn\">></button>\n            </div>\n        )\n    }\n}\n\nconst mapState = (state) => {\n    return {\n        users: state.users,\n        currentPage: state.currentPage\n    };\n};\n\nconst mapDispatch = (dispatch) => ({\n    changePage: (currentPage) => dispatch({ type: CHANGE_PAGE, currentPage: currentPage }),\n});\n\nexport default connect(mapState, mapDispatch)(Pagination);","import React from 'react';\nimport { connect } from 'react-redux';\nimport User from './User'\nimport { perPage } from './Pagination'\n\nconst Table = ({ users = [], currentPage }) => (\n    <table className=\"table-users\">\n        <thead>\n            <tr>\n                <th>Number</th>\n                <th>name</th>\n                <th>surname</th>\n                <th>description</th>\n            </tr>\n        </thead>\n        <tbody>\n            {users.filter((user, index) => ((index >= currentPage * perPage - perPage) && (index < currentPage * perPage)))\n                .map(user => (\n                    <User\n                        key={user.id}\n                        user={user}\n                    />\n                ))}\n        </tbody>\n    </table>\n);\n\nconst mapState = (state) => {\n    return {\n        users: state.users,\n        currentPage: state.currentPage\n    };\n};\n\nexport default connect(mapState)(Table);","import React from 'react';\nimport './App.css';\nimport { getUsers } from './helpers/api';\nimport { connect } from 'react-redux';\nimport Table from './Table';\nimport Pagination from './Pagination';\nimport { SET_USERS } from './redux/store'\n\nclass App extends React.Component {\n  async componentDidMount() {\n    const { setUsers } = this.props;\n    const users = await getUsers();\n    setUsers(users);\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>Table of <span>{this.props.count}</span> users</h1>\n        <Table />\n        <Pagination />\n      </div>);\n  }\n}\n\nconst mapState = (state) => {\n  return {\n    count: state.users.length,\n  };\n};\n\nconst mapDispatch = (dispatch) => ({\n  setUsers: (users) => dispatch({ type: SET_USERS, users: users }),\n});\n\nexport default connect(mapState, mapDispatch)(App);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport store from './redux/store';\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n);"],"sourceRoot":""}